var loginModule=angular.module("loginModule",["ngRoute"]);loginModule.controller("loginController",["$scope","$rootScope","api","$http","$location","user","Base64","$window","$interval","$localStorage",function(t,e,o,n,i,r,a,c,l,s){s.set("token",""),s.set("id_app",""),e.app_info=void 0,e.isLogined=!1,id_app=void 0,e.id_app=void 0,e.user=void 0,o.init(),t.data={},t.auth_google=function(){var t=c.open(server_url+"/auth/google","Google authentication","height=400,width=400"),n=l(function(){try{if(t.location.href&&t.location.href.indexOf("/auth/google/callback")&&t.document.body.innerHTML&&t.document.body.innerHTML.indexOf("access_token")>=0){var a=t.document.title;l.cancel(n),t.close(),s.set("token",a),o.init(a),r.getInfo(function(t){e.user=t,i.url("/app")})}}catch(c){console.log(c)}},500)},t.auth_facebook=function(){var t=c.open(server_url+"/auth/facebook","Facebook authentication","height=400,width=400"),n=l(function(){try{if(t.location.href&&t.location.href.indexOf("/auth/facebook/callback")&&t.document.body.innerHTML&&t.document.body.innerHTML.indexOf("access_token")>=0){var a=t.document.title;l.cancel(n),t.close(),s.set("token",a),o.init(a),r.getInfo(function(t){e.user=t,i.url("/app")})}}catch(c){}},500)},t.auth_local=function(){var c=server_url+"/auth/local",l="Basic "+a.encode(t.data.username+":"+t.data.password);n.get(c,{headers:{Authorization:l}}).success(function(t){s.set("token",t),o.init(t),r.getInfo(function(t){e.user=t,i.url("/app")})}).error(function(e){t.messageError=e})},t.signup=function(){i.url("/signup")}}]),loginModule.controller("signupController",["$scope","$rootScope","api","$http","$location","$localStorage",function(t,e,o,n,i,r){r.remove("token"),r.remove("id_app"),e.app_info=void 0,id_app=void 0,e.id_app=void 0,e.isLogined=!1,o.init(),t.data={},t.signup=function(){var e=server_url+"/signup";n.post(e,t.data).success(function(e){t.alertType="alert alert-success",t.messageError=e,t.data={}}).error(function(e){t.alertType="alert alert-danger",t.messageError=e})}}]),loginModule.factory("user",["$http","$localStorage","$rootScope","$location","socket","nodeWebkit",function(t,e,o,n,i,r){return{getInfo:function(e){o.user?e(null,o.user):t.get(server_url+"/api/user").success(function(t){var n=t.name.split(" ");t.last_name=n[n.length-1],o.error=void 0,o.user=t,i.on("connect",function(){i.emit("login",{token:t.token,email:t.email})}),i.emit("login",{token:t.token,email:t.email}),i.on("notify:count",function(t){o.notifies_count=t,t&&r.notification("Bạn có thông báo mới")}),i.on("message:count",function(t){o.messages_count=t,t&&r.notification("Bạn có tin nhắn mới")}),i.on("disconnect",function(){}),e(null,t)}).error(function(t){t||(t="Không thể kết nối với máy chủ"),o.error=t,o.user=void 0,e(t),n.url("login")})},getProfile:function(e,o){var n=server_url+"/api/profile?email="+e;t.get(n).success(function(t){o(null,t)}).error(function(t){o(t)})},getProfileByToken:function(e){var o=server_url+"/api/profile";t.get(o).success(function(t){e(null,t)}).error(function(t){e(t)})},updateProfile:function(e,o){var n=server_url+"/api/updateprofile";t.post(n,e).success(function(t){o(null,t)}).error(function(t){o(t)})},updatePassword:function(e,o){var n=server_url+"/api/changepassword";t.post(n,e).success(function(t){o(null,t)}).error(function(t){o(t)})},resetPassword:function(e,o){var n=server_url+"/resetpassword?email="+e;t.get(n).success(function(t){o(null,t)}).error(function(t){o(t)})},getNotifies:function(e){var o=server_url+"/api/notifies";t.get(o).success(function(t){e(null,t)}).error(function(t){e(t)})},getMessagesColleagues:function(e){var o=server_url+"/api/message/colleague/latest";t.get(o).success(function(t){e(null,t)}).error(function(t){e(t)})},logout:function(o){return e.get("token")?void t.get(server_url+"/api/user/logout").success(function(t){o(t)}).error(function(){o()}):o}}}]),loginModule.controller("uploadController",["$scope","user","$localStorage","$rootScope","$location","app","$window","$routeParams",function(t,e,o,n,i,r,a,c){var l=c.folder;t.action=server_url+"/api/uploadfile?access_token="+o.get("token")+"&folder="+l}]),loginModule.controller("uploadExcelController",["$scope","user","$localStorage","$rootScope","$location","app","$window","$routeParams",function(t,e,o){t.action=server_url+"/api/uploadexcel?access_token="+o.get("token")}]),loginModule.controller("profileController",["$scope","user","$localStorage","$rootScope","$location","app","$window","$interval","appInfo",function(t,e,o,n,i,r,a,c,l){l.info("profile",function(n){n||(t.access_token=o.get("token"),e.getProfileByToken(function(e,o){return e?(t.alertType="danger",t.messageError=e):(t.alertType="success",void(t.data=o))}),t.updateProfile=function(){e.updateProfile(t.data,function(e){return e?(t.alertType="danger",t.messageError=e):(t.alertType="success",void(t.messageError="Bạn đã cập nhật thành công!"))})},t.updatePassword=function(){e.updatePassword({oldPassword:t.oldPassword,newPassword:t.newPassword,reNewPassword:t.reNewPassword},function(e){return e?(t.alertTypeChangePass="danger",t.messageErrorChangePass=e):(t.alertTypeChangePass="success",void(t.messageErrorChangePass="Bạn đã thay đổi mật khẩu thành công!"))})})})}]),loginModule.controller("resetPasswordController",["$scope","user","$rootScope","$location","app",function(t,e){t.resetPassword=function(){e.resetPassword(t.email,function(e,o){e?(t.alertType="alert alert-danger",t.messageError=e):(t.alertType="alert alert-success",t.messageError=o)})}}]),loginModule.controller("logoutController",["$scope","$localStorage","api","$location","$rootScope","user","$window","$timeout",function(t,e,o,n,i,r,a,c){r.logout(function(){if(i.token=null,e.remove("token"),e.remove("id_app"),i.app_info=void 0,i.isLogined=!1,id_app=null,i.id_app=void 0,o.init(),n.url("/login"),i.user){var t;if("google"==i.user.server&&(t="https://mail.google.com/mail/u/0/?logout&hl=en"),"facebook"==i.user.server,i.user=void 0,t){var r=a.open(t,"Logout","height=400,width=400");c(function(){r.close()},3e3)}}})}]),loginModule.controller("downloadController",["$scope","$http",function(t,e){e.get(server_url+"/public/versioninfo").success(function(e){t.downloads=e})}]),loginModule.config(["$routeProvider","$locationProvider",function(t){t.when("/signup",{templateUrl:"templates/login/templates/signup.html",controller:"signupController"}).when("/resetpassword",{templateUrl:"templates/login/templates/resetpassword.html",controller:"resetPasswordController"}).when("/profile",{templateUrl:"templates/login/templates/profile.html",controller:"profileController"}).when("/login",{templateUrl:"templates/login/templates/login.html",controller:"loginController"}).when("/logout",{templateUrl:"templates/login/templates/callback.html",controller:"logoutController"}).when("/download",{templateUrl:"templates/login/templates/download.html",controller:"downloadController"}).when("/uploadfile/:folder",{templateUrl:"templates/login/templates/upload.html",controller:"uploadController"}).when("/uploadexcel",{templateUrl:"templates/login/templates/upload.html",controller:"uploadExcelController"})}]);
//# sourceMappingURL=login.min.js.map